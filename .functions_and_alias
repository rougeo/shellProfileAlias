### FUNCTIONS

# Easy extract
extract() {
  if [ -f $1 ] ; then
      case $1 in
          *.tar.bz2)   tar xvjf $1    ;;
          *.tar.gz)    tar xvzf $1    ;;
          *.bz2)       bunzip2 $1     ;;
          *.rar)       rar x $1       ;;
          *.gz)        gunzip $1      ;;
          *.tar)       tar xvf $1     ;;
          *.tbz2)      tar xvjf $1    ;;
          *.tgz)       tar xvzf $1    ;;
          *.zip)       unzip $1       ;;
          *.Z)         uncompress $1  ;;
          *.7z)        7z x $1        ;;
          *)           echo "don't know how to extract '$1'..." ;;
      esac
  else
      echo "'$1' is not a valid file!"
  fi
}

# Makes directory then moves into it
mkcdr() {
    mkdir -p -v $1
    cd $1
}

# Creates an archive from given directory
mktar() { tar cvf  "${1%%/}.tar"     "${1%%/}/"; }
mktgz() { tar cvzf "${1%%/}.tar.gz"  "${1%%/}/"; }
mktbz() { tar cvjf "${1%%/}.tar.bz2" "${1%%/}/"; }

# generate password, default 12 characters
genpass() {
    if [[ -n $1 ]]; then
        passresult=`< /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c$1`
    else
        passresult=`< /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c12`
    fi
    echo "$passresult"
}

### ALIASES

## Keeping things organized
alias ls='ls --color=auto'
alias l='ls --color=auto'
alias ll='ls -l'
alias la='ls -A'
alias lla='ll -A'
alias kk='ll'
alias cp='cp -i'
alias mv='mv -i'
alias mkdir='mkdir -p -v'
alias df='df -h'
alias du='du -h -c'
alias reload='source ~/.bashrc'
alias biggest='BLOCKSIZE=1048576; du -x | sort -nr | head -10'
alias grep='grep --color'
alias rgrep='grep -r'
alias dcp='docker-compose'

## App-specific
alias wget='wget -c'

## Change to root user
alias root='sudo su -'

# GIT
alias gptag="git describe --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1)"  # git previous tag
alias gctag="git describe --abbrev=0 --tags" # git current tag
alias v="vscode ."
alias glog="git log --oneline --decorate --graph"

# git log --pretty=format:"author: %cn; date: %ci; Action:%s" $(git describe --abbrev=0 --tags `git rev-list --tags --skip=1 --max-count=1`)...$(git describe --abbrev=0 --tags)
